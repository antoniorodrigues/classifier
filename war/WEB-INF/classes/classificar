#!/bin/bash

VERBOSE=false

debug() {
	echo "VERBOSE=$VERBOSE"
	echo "technique=$technique"
	echo "training_path=$training_path"
	echo "test_path=$test_path"
}

echo_fail() {
	if [ "$TERM" != "dumb" ];then
		echo -e "\e[31m$1"  1>&2 ; tput sgr0
	else
		echo -e "$1"  1>&2
	fi
}

show_help() {
	echo "Parameters inside [] are not mandatory"
	echo "Usage: bash $0 [ -v | --verbose ] TECHNIQUE TRAINING_PATH TEST_PATH"
	echo -e "\t$0 -h | --help"
	echo
	echo "-v | --verbose: makes the output verbose, showing info per files"
	echo "-h | --help: shows this help"
}

check_technique() {
	if [ -z $technique ]; then
		echo_fail "Apparently, you are crazy and did not provided a valid technique. Please check your parameters.";
		show_help;
		exit 1;
	fi
}

check_training_path() {
	if [ -z $training_path ]; then
		echo_fail "Apparently, you did not provided a valid training path. Please check your parameters.";
		show_help;
		exit 1;
	fi
}

check_test_path() {
	if [ -z $test_path ]; then
		echo_fail "Apparently, you did not provided a valid test path. Please check your parameters."
		show_help;
		exit 1;
	fi
}

# TODO REMOVE ME ??
success_or_die() {
	if [ "$?" -ne "0" ]; then
		echo_fail "Exiting..."
		exit 1;
	fi
}

# Define the arguments provided for this is script as variables and checks if it is all ok.
define_parameters() {
	case $1 in
		-h | --help)
			show_help;
			exit 0;
			;;
		-v | --verbose)
			VERBOSE=true;
			shift;
			;;
	esac

	technique=$1;
	shift;

	training_path=$1;
	shift;

	test_path=$1;
	shift;

	check_technique;
	check_training_path;
	check_test_path;
}

execute_classifier() {
	mkdir -p $training_path
	mkdir -p $test_path
	java -classpath .:../lib/'*':classifier.jar com.classifier.ClassifierMain $VERBOSE $technique $training_path $test_path
}

main() {
	define_parameters $@

	debug;

	execute_classifier;
}

main $@;
